#include <stdio.h>
#include <conio.h>
#include <stdlib.h>

struct node {
    int data;
    struct node *left, *right;
};

// Function prototypes
struct node* create();
void preorder(struct node* root);
void inorder(struct node* root);
void postorder(struct node* root);

struct node* create() {
    int x;  
    struct node* newnode;  // Moved variable declaration to the top

    printf("Enter data or -1 for no data\n");
    scanf("%d", &x);

    if (x == -1) {
        return 0;
    }

    newnode = (struct node*)malloc(sizeof(struct node));
    newnode->data = x;

    printf("Enter the left child of %d\n", x);
    newnode->left = create();

    printf("Enter the right child of %d\n", x);
    newnode->right = create();

    return newnode;
}

void preorder(struct node* root) {
    if (root == 0) {
        return;
    }
    printf("%d ", root->data);  // Fixed printf format
    preorder(root->left);
    preorder(root->right);
}

void inorder(struct node* root) {
    if (root == 0) {
        return;
    }
    inorder(root->left);
    printf("%d ", root->data);  // Fixed printf format
    inorder(root->right);
}

void postorder(struct node* root) {
    if (root == 0) {
        return;
    }
    postorder(root->left);
    postorder(root->right);
    printf("%d ", root->data);  // Fixed printf format
}

int main() {
    struct node* root;  // Moved variable declaration to the top

    clrscr();  // Clear screen for Turbo C++
    
    root = create();

    printf("Preorder traversal: ");
    preorder(root);
    printf("\n");

    printf("Inorder traversal: ");
    inorder(root);
    printf("\n");

    printf("Postorder traversal: ");
    postorder(root);
    printf("\n");

    getch();  // Wait for user input before exiting (Turbo C++)
    return 0;
}
