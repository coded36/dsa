#include <stdio.h>
#include <stdlib.h>

#define SIZE 10  // Size of the hash table

int main() {
    int nums[100], table[SIZE], count, i, pos, tries;

    printf("Enter the number of elements: ");
    scanf("%d", &count);

    printf("Enter the elements:\n");
    for (i = 0; i < count; i++)
        scanf("%d", &nums[i]);

    // Initialize hash table with -1 (empty slots)
    for (i = 0; i < SIZE; i++)
        table[i] = -1;

    // Insert elements using open addressing (linear probing)
    for (i = 0; i < count; i++) {
        pos = nums[i] % SIZE;
        tries = 0;

        while (table[pos] != -1 && tries < SIZE) {
            pos = (pos + 1) % SIZE; // Linear probing
            tries++;
        }

        if (tries < SIZE) {
            table[pos] = nums[i];
            printf("Stored %d at table[%d]\n", nums[i], pos);
        } else {
            printf("Hash table is full. Could not insert %d\n", nums[i]);
        }
    }

    // Display the hash table
    printf("Hash Table:\n");
    for (i = 0; i < SIZE; i++) {
        if (table[i] != -1)
            printf("%d ", table[i]);
        else
            printf("_ "); // Show empty slots
    }
    printf("\n");

    return 0;
}
